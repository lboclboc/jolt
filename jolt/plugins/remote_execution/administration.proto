syntax = "proto3";

option go_package = "pkg/protocol";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "jolt/common.proto";
import "jolt/plugins/remote_execution/scheduler.proto";


message ListBuildsRequest {
    // Include tasks
    bool tasks = 1;
}

message ListBuildsResponse {
    message Task {
        // Task identity
        string id = 1;

        // Task name
        string name = 2;

        // Current status of the task
        TaskStatus status = 3;

        // Task has observer
        bool hasObserver = 4;
    }

    message Build {
        // Build identifier
        string id = 1;

        // Status
        BuildStatus status = 2;

        // List of build tasks
        repeated Task tasks = 3;

        // Time when build was scheduled
        google.protobuf.Timestamp scheduledAt = 4;

        // Build has observer
        bool hasObserver = 5;

        // Build has running task
        bool hasRunningTask = 6;

        // Build has queued task
        bool hasQueuedTask = 7;

        // Is ready / in scheduler ready queue
        bool ready = 8;
    }

    repeated Build builds = 1;
}

message ListWorkersRequest {}
message ListWorkersResponse {}

// This service is not yet implemented.
service Administration {
    rpc CancelBuild(CancelBuildRequest) returns (CancelBuildResponse);
    rpc ListBuilds(ListBuildsRequest) returns (ListBuildsResponse);
    rpc ListWorkers(ListWorkersRequest) returns (ListWorkersResponse);
    rpc Reschedule(google.protobuf.Empty) returns (google.protobuf.Empty);
}
