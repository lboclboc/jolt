from jolt import Task, IntParameter, utils
import time

class Pass(Task):
    pass


class Fail(Task):
    def run(self, deps, tools):
        assert False, "Always fails"


class Unstable(Task):
    unstable = True

    def run(self, deps, tools):
        assert False, "Always fails"


class Sleep(Task):
    t = IntParameter()

    def run(self, deps, tools):
        time.sleep(int(self.t))


class ShellSleep(Task):
    t = IntParameter()

    def run(self, deps, tools):
        tools.run("bash -c 'function debug() {{ echo SIGNAL; }}; trap debug SIGINT; while true; do sleep {t}; done'", timeout=15)


class Interrupt(Task):
    t = IntParameter()

    def run(self, deps, tools):
        with utils.delay_interrupt():
            time.sleep(int(self.t))
